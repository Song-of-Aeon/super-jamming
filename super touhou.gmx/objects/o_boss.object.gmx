<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_nue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_damage</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 24;
count = 0;
countwo = 0;
hand = instance_create(x, y+100, o_hand);
snake = instance_create(x, y-73, o_snake);
going = false;
hp2 = 10;
pulse = false;
pulse2 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if going {
    count++;
    if count &gt;= 300-abs(hp2-30) {
        switch irandom(3) {
            case 0:
                o_snake.pulse = true;
                break;
            case 1:
                o_hand.pulse = true;
                break;
            case 2:
                pulse = true;
                break;
            case 3:
                pulse2 = true;
                break;
                
        }
        audio_play_sound(se_growl, 0, 0);
        count = 0;
    }
}
hp2 = hp+o_hand.hp;
if hp2 &lt;= 30 {
    global.endframe = surface_create(surface_get_width(application_surface),surface_get_height(application_surface));
    surface_copy(global.endframe,0,0,application_surface);
    room = final_room;
}
if(pulse){
    sprite_index = s_fire;
    image_speed = 0.2;
    pulse = false;
}

if pulse2 {
    sprite_index = s_lightning;
    image_speed = 0.2;
    pulse = false;
    pulse2 = false;
}
if image_index != s_nue {
    if(round(image_index) == sprite_get_number(sprite_index)-1) {
        sprite_index = s_nue;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
